#!/bin/bash

# TODO: handle errors (probably with an array of booleans and a || clause when running commands)

DONE_CHAR="✅"
SPINNER_CHARS=(
  "\e[33m⣾\e[0m"
  "\e[33m⣷\e[0m"
  "\e[33m⣯\e[0m"
  "\e[33m⣟\e[0m"
  "\e[33m⡿\e[0m"
  "\e[33m⢿\e[0m"
  "\e[33m⣻\e[0m"
  "\e[33m⣽\e[0m"
)

TOTAL_FRAMES=${#SPINNER_CHARS[@]}

LOAD_STATE_LOADING="Loading"
LOAD_STATE_DONE="Done"
LOAD_STATE_ERR="Error"

loading_frame() {
  TEXT=$1
  STATE=$2
  FRAME_COUNT=$(( $3 % $TOTAL_FRAMES ))

  if [ $STATE = $LOAD_STATE_DONE ]; then
    printf "Done\n"
  elif [ $STATE = $LOAD_STATE_ERR ]; then
    printf "Error\n"
  else
    SPINNER_CHAR=${SPINNER_CHARS[$FRAME_COUNT]}
    echo -en "\r$SPINNER_CHAR $TEXT"
  fi
}

get_proccess_state() {
  FILE_ID=$1
  echo "$BASE_LOAD_PATH/$FILE_ID-STATE"
}

set_load_state() {
  FILE_ID=$1
  LOAD_STATE=$2
  echo $LOAD_STATE > (get_proccess_state $FILE_ID)
}

BASE_LOAD_PATH="/tmp/spinner"
mkdir -p $BASE_LOAD_PATH

load() {
  COMMAND_TO_LOAD=$1
  FRAME=0
  LOADING_ID=$2
  LOAD_STATE_FILE="$BASE_LOAD_PATH/$LOADING_ID-STATE"

  # run command
  ($COMMAND_TO_LOAD &&
    set_load_state $ID $LOAD_STATE_DONE ||
    set_load_state $ID $LOAD_STATE_ERR
  ) &

  # set loading state
  echo $LOAD_STATE_LOADING > $LOAD_STATE_FILE

  # untill all processes finish, show loading status for all of them
  while [ 1 ]; do
    loading_frame "abc RUN" $(cat $LOAD_STATE_FILE) $FRAME
    FRAME=$(($FRAME + 1))

    if [[ "$(cat $LOAD_STATE_FILE)" = "Done" ]]; then
      break
    fi

    sleep 0.2
  done
}

# loading_frame "test 1" $1 &
# echo -e "$DONE_CHAR done"
# echo "" &
# spin "test 2" 2

ID=$(echo $RANDOM | md5sum | head -c 15)
COMMAND_TO_LOAD="sleep 4"
load $COMMAND_TO_LOAD $ID

