#!/bin/bash

# TODO: handle errors (probably with an array of booleans and a || clause when running commands)

DONE_CHAR="✅"
SPINNER_CHARS=(
  "\e[33m⣾\e[0m"
  "\e[33m⣷\e[0m"
  "\e[33m⣯\e[0m"
  "\e[33m⣟\e[0m"
  "\e[33m⡿\e[0m"
  "\e[33m⢿\e[0m"
  "\e[33m⣻\e[0m"
  "\e[33m⣽\e[0m"
)

TOTAL_FRAMES=${#SPINNER_CHARS[@]}

LOAD_STATE_LOADING="Loading"
LOAD_STATE_DONE="Done"
LOAD_STATE_ERR="Error"

# spin() {
# SPINNER_CHARS=('⠁' '⠂' '⠄' '⡀' '⢀' '⠠' '⠐' '⠈')
#   WAIT=0.1
#   TEXT=$1
#   LEVEL=${2-:0}
# 
#   while [ 1 ]; do
#     for spin_char in "${SPINNER_CHARS[@]}"; do
#       # print $LEVEL number of \n
#       # printf '\n%.0s' {0..$LEVEL}
#       for i in {1..$LEVEL}; do
#         echo ""
#       done
# 
#       echo -ne "\r\e[32m$spin_char\e[0m $TEXT"
#       sleep $WAIT
# 
#       for i in {1..$LEVEL}; do
#         tput cuu1
#       done
# 
#     done
#   done
# }

loading_frame() {
  TEXT=$1
  STATE=$2
  FRAME_COUNT=$(( $3 % $TOTAL_FRAMES ))

  if [ $STATE = $LOAD_STATE_DONE ]; then
    printf "Done\n"
  elif [ $STATE = $LOAD_STATE_ERR ]; then
    printf "Error\n"
  else
    SPINNER_CHAR=${SPINNER_CHARS[$FRAME_COUNT]}
    echo -en "\r$SPINNER_CHAR $TEXT"
  fi
}

load_ok() {
  echo $LOAD_STATE_DONE > $1
}
load_error() {
  echo $LOAD_STATE_ERR > $1
}

BASE_LOAD_PATH="/tmp/spinner"
mkdir -p $BASE_LOAD_PATH

load() {
  COMMAND_TO_LOAD=$1
  FRAME=0
  LOADING_ID=$2
  LOAD_STATE_FILE="$BASE_LOAD_PATH/$LOADING_ID"

  echo $LOAD_STATE_LOADING > $LOAD_STATE_FILE

  while [ 1 ]; do
    loading_frame "abc RUN" $(cat $LOAD_STATE_FILE) $FRAME
    FRAME=$(($FRAME + 1))

    if [[ "$(cat $LOAD_STATE_FILE)" = "Done" ]]; then
      break
    fi

    sleep 0.2
  done

}

# loading_frame "test 1" $1 &
# echo -e "$DONE_CHAR done"
# echo "" &
# spin "test 2" 2

# run command
ID=$(echo $RANDOM | md5sum | head -c 15)
COMMAND_TO_LOAD="sleep 4"
($COMMAND_TO_LOAD && load_ok $ID || load_error $ID) &
load $COMMAND_TO_LOAD $ID

